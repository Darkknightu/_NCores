<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="Cores" targetName="Cores_LSMBloomFilterTest" />
      <config projectName="Cores" targetName="Cores_TestTypes" />
      <config projectName="Cores" targetName="Cores_RandomSeekTest" />
      <config projectName="Cores" targetName="Cores_FDBTreeDbg" />
      <config projectName="Cores" targetName="Cores_btreeTest" />
      <config projectName="Cores" targetName="Cores_ParallelBandwidthTest" />
      <config projectName="Cores" targetName="Cores" />
      <config projectName="Cores" targetName="Cores_BandwidthTest" />
      <config projectName="Cores" targetName="Cores_FDTreeDbg" />
      <config projectName="Cores" targetName="Cores_BitsetTest" />
      <config projectName="Cores" targetName="Cores_SIMDBasisTest" />
      <config projectName="Cores" targetName="Cores_BasicTypeTest" />
      <config projectName="Cores" targetName="Cores_TestSchema" />
      <config projectName="Cores" targetName="Cores_BlockAppendTest" />
      <config projectName="Cores" targetName="Cores_FDBTreeGen" />
      <config projectName="Cores" targetName="Cores_BlockCacheTest" />
      <config projectName="Cores" targetName="Cores_ClearMemory" />
      <config projectName="Cores" targetName="gtest" />
      <config projectName="Cores" targetName="Cores_stdcasTest" />
      <config projectName="Cores" targetName="Cores_LibblBloomFilterBasicTest" />
      <config projectName="Cores" targetName="Cores_MallocAndBeyondTest" />
      <config projectName="Cores" targetName="Cores_btreeTestSearch" />
      <config projectName="Cores" targetName="Cores_DiskPerformanceTest" />
      <config projectName="Cores" targetName="Cores_FDBTreeSearch" />
      <config projectName="Cores" targetName="Cores_lz4CodecTest" />
      <config projectName="Cores" targetName="Cores_FDTreeTest" />
      <config projectName="Cores" targetName="Cores_FDBTreeLoad" />
      <config projectName="Cores" targetName="Cores_btreeTestBuild" />
      <config projectName="Cores" targetName="Cores_BlockManagerTest" />
      <config projectName="Cores" targetName="Cores_DiskAnsyncIOTest" />
      <config projectName="Cores" targetName="check" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b9b43bcd-145f-44aa-90b6-758cb26fe0ab" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BandwidthTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BandwidthTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BasicTypeTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BasicTypeTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BitsetTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BitsetTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockAppendTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockCacheTest.dir/test/block/buffer/BlockCacheTest.cpp.obj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_BlockManagerTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ClearMemory.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ClearMemory.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ClearMemory.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ClearMemory.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskAnsyncIOTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_DiskPerformanceTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeDbg.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeDbg.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeDbg.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeDbg.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeGen.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeGen.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeGen.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeGen.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeLoad.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeLoad.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeLoad.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeLoad.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeSearch.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeSearch.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeSearch.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDBTreeSearch.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeDbg.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeDbg.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeDbg.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeDbg.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_FDTreeTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LSMBloomFilterTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LSMBloomFilterTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LSMBloomFilterTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LSMBloomFilterTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LibblBloomFilterBasicTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LibblBloomFilterBasicTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LibblBloomFilterBasicTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_LibblBloomFilterBasicTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_MallocAndBeyondTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_MallocAndBeyondTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_MallocAndBeyondTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_MallocAndBeyondTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ParallelBandwidthTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ParallelBandwidthTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ParallelBandwidthTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_ParallelBandwidthTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_RandomSeekTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_SIMDBasisTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_SIMDBasisTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_SIMDBasisTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_SIMDBasisTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_TestTypes.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_TestTypes.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_TestTypes.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_TestTypes.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestBuild.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestBuild.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestBuild.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestBuild.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestSearch.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestSearch.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestSearch.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_btreeTestSearch.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/linklibs.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/linklibs.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_lz4CodecTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_stdcasTest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_stdcasTest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_stdcasTest.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Cores_stdcasTest.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CTestTestfile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CTestTestfile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Cores.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Cores.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/includes_CXX.rsp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/third-party/gtest-1.7.0/fused-src/gtest/CMakeFiles/gtest.dir/includes_CXX.rsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/BlockManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/BlockManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/buffer/BlockCache.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/buffer/BlockCache.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/buffer/BlockCache.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/buffer/BlockCache.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/buffer/CoresAppender.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/buffer/CoresAppender.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/buffer/CoresBlock.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/buffer/CoresBlock.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/buffer/CoresIterator.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/buffer/CoresIterator.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/block/buffer/CoresRandomAccessor.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/block/buffer/CoresRandomAccessor.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/all.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/all.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bitvector.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bitvector.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/a2.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/a2.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/a2.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/a2.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/basic.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/basic.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/basic.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/basic.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/bitwise.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/bitwise.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/bitwise.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/bitwise.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/counting.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/counting.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/counting.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/counting.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/stable.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/stable.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/bloom_filter/stable.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/bloom_filter/stable.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/counter_vector.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/counter_vector.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/counter_vector.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/counter_vector.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/h3.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/h3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/hash.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/hash.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/hash.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/hash.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/libbl_bitvector.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/libbl_bitvector.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/libbl_bloom_filter.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/libbl_bloom_filter.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/object.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/object.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bloom/wrap.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bloom/wrap.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/BTreeEntry.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/BTreeEntry.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/BTreeEntry.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/BTreeEntry.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/BTreeNode.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/BTreeNode.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/BTreeNode.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/BTreeNode.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/SerialBTree.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/SerialBTree.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/SerialBTree.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/SerialBTree.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/cache/LSMCache.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/cache/LSMCache.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/cache/cache.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/cache/cache.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/misc/global.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/misc/global.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/misc/global.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/misc/global.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/btree/misc/querytype.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/btree/misc/querytype.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/PMwCAS.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/PMwCAS.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/PMwCAS.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/PMwCAS.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/bzconfig.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/bzconfig.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/bzerrno.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/bzerrno.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/bztree.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/bztree.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/ebr.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/ebr.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/ebr.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/ebr.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/gc.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/gc.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/gc.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/gc.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/rel_ptr.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/rel_ptr.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/test.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/test.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/bztree/utils.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/bztree/utils.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/columnar/Columnar.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/columnar/Columnar.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/columnar/ColumnarFile.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/columnar/ColumnarFile.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/columnar/ColumnarHeader.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/columnar/ColumnarHeader.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/Timer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/Timer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/Timer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/Timer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/btree.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/btree.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/btree.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/btree.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/buffer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/buffer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/buffer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/buffer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/error.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/error.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/error.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/error.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/fdtree.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/fdtree.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/fdtree.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/fdtree.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/lruque.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/lruque.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/lruque.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/lruque.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/model.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/model.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/pageTable.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/pageTable.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/pageTable.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/pageTable.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/slice.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/slice.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/storage.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/storage.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/fdtree/storage.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/fdtree/storage.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/io/codec/lz4Codec.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/io/codec/lz4Codec.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/bitvector.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/bitvector.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/bloom.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/bloom.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/bloom_filter.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/bloom_filter.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/blossom.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/blossom.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/buffer.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/buffer.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/buffer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/buffer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/debug.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/debug.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/index.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/index.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/index.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/index.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/log.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/log.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/log.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/log.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/murmur3.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/murmur3.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/murmur3.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/murmur3.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/platform.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/platform.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/skiplist.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/skiplist.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/skiplist.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/skiplist.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/lsmtree/util.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/lsmtree/util.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/metadata/column/ColumnDescriptor.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/metadata/column/ColumnDescriptor.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/metadata/parser/EntityDescriptor.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/metadata/parser/EntityDescriptor.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/metadata/parser/EntityDescriptor.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/metadata/parser/EntityDescriptor.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/metadata/schema/MetaData.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/metadata/schema/MetaData.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/metadata/schema/Types.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/metadata/schema/Types.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/osdep/FileOperations.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/osdep/FileOperations.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/Bitset.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/Bitset.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/CJsonObject.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/CJsonObject.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/CJsonObject.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/CJsonObject.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/HashSet.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/HashSet.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/cJSON.c" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/cJSON.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/cJSON.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/cJSON.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/utils.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/utils.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/utils/utils.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/utils/utils.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/block/BlockAppendTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/block/BlockAppendTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/block/BlockManagerTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/block/BlockManagerTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/bloom/LibblBloomFilterBasicTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/bloom/LibblBloomFilterBasicTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/FDBTreeDbg.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/FDBTreeDbg.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/FDBTreeGen.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/FDBTreeGen.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/FDBTreeLoad.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/FDBTreeLoad.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/FDBTreeSearch.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/FDBTreeSearch.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/FDTreeDbg.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/FDTreeDbg.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/FDTreeTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/FDTreeTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/btreeTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/btreeTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/btreeTestBuild.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/btreeTestBuild.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/btree/btreeTestSearch.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/btree/btreeTestSearch.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/bztree/bzTreeTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/bztree/bzTreeTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/io/DiskAnsyncIOTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/io/DiskAnsyncIOTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/io/DiskPerformanceTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/io/DiskPerformanceTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/io/RandomSeekTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/io/RandomSeekTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/io/codec/lz4CodecTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/io/codec/lz4CodecTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/lsmtree/BloomTest.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/lsmtree/BloomTest.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/lsmtree/LSMBloomFilterTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/lsmtree/LSMBloomFilterTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/lsmtree/LSMBufferTest.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/lsmtree/LSMBufferTest.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/lsmtree/LSMIndexDbg.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/lsmtree/LSMIndexDbg.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/lsmtree/LSMIndexTest.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/lsmtree/LSMIndexTest.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/lsmtree/LSMSkiplistTest.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/lsmtree/LSMSkiplistTest.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/metadata/parser/TestTypes.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/metadata/parser/TestTypes.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/osdep/MallocAndBeyondTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/osdep/MallocAndBeyondTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/osdep/SIMDBasisTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/osdep/SIMDBasisTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/primitive/BandwidthTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/primitive/BandwidthTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/primitive/BasicTypeTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/primitive/BasicTypeTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/primitive/ParallelBandwidthTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/primitive/ParallelBandwidthTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/stdlockfree/stdcasTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/stdlockfree/stdcasTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/utils/BitsetTest.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/utils/BitsetTest.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/utils/ClearMemory.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/utils/ClearMemory.cpp" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <ignored path="$PROJECT_DIR$/cmake-build-release-remote-host/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="140">
              <caret line="220" column="31" selection-start-line="220" selection-start-column="31" selection-end-line="220" selection-end-column="31" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="411">
              <caret line="1005" selection-start-line="1005" selection-end-line="1005" />
              <folding>
                <element signature="e#0#17#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/utils/Bitset.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="437">
              <caret line="23" column="5" selection-start-line="23" selection-start-column="5" selection-end-line="23" selection-end-column="5" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="183">
              <caret line="431" column="42" selection-start-line="431" selection-start-column="42" selection-end-line="431" selection-end-column="42" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/osdep/FileOperations.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="114">
              <caret line="6" column="24" selection-start-line="6" selection-start-column="24" selection-end-line="6" selection-end-column="24" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/block/buffer/BlockCache.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="349">
              <caret line="171" column="23" selection-start-line="171" selection-start-column="23" selection-end-line="171" selection-end-column="23" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>next</find>
      <find>LIB</find>
      <find>Boost_FIND_REQUIRED</find>
      <find>block</find>
      <find>block_te</find>
      <find>FILTERING</find>
      <find>zl</find>
      <find>_count</find>
      <find>seek</find>
      <find>1024 * 1024</find>
      <find>liba</find>
      <find>set</find>
      <find>append</find>
      <find>writefile</find>
      <find>1024</find>
      <find>readfile</find>
      <find>PrimitiveBlock</find>
      <find>uni</find>
      <find>_cache</find>
      <find>loadFromFile</find>
      <find>BLOCKSOURCE</find>
      <find>BlockCache</find>
      <find>BLOCK_TESTS</find>
      <find>ROW_COUNT</find>
      <find>intset</find>
      <find>floatBlock</find>
      <find>time</find>
      <find>load</find>
      <find>offset_i</find>
      <find>Boost_INCLUDE_DIR</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/block/buffer/BlockCache.cpp" />
        <option value="D:/NCores/test/block/buffer/BlockCacheTest.cpp" />
        <option value="$PROJECT_DIR$/src/columnar/ColumnarFile.h" />
        <option value="$PROJECT_DIR$/src/block/buffer/BlockCache.h" />
        <option value="$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp" />
        <option value="$PROJECT_DIR$/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp" />
      </list>
    </option>
  </component>
  <component name="OCFindUsagesOptions" text="true" ivars="false" properties="true" derivedClasses="false" />
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="951" />
    <option name="width" value="978" />
    <option name="height" value="1039" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Cores" type="b2602c69:ProjectViewProjectNode" />
              <item name="_NCores" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Cores" type="b2602c69:ProjectViewProjectNode" />
              <item name="_NCores" type="462c0819:PsiDirectoryNode" />
              <item name="cmake-build-debug" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Cores" type="b2602c69:ProjectViewProjectNode" />
              <item name="_NCores" type="462c0819:PsiDirectoryNode" />
              <item name="res" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Cores" type="b2602c69:ProjectViewProjectNode" />
              <item name="_NCores" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Cores" type="b2602c69:ProjectViewProjectNode" />
              <item name="_NCores" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="metadata" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Cores" type="b2602c69:ProjectViewProjectNode" />
              <item name="_NCores" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="metadata" type="462c0819:PsiDirectoryNode" />
              <item name="parser" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../../NCores-master" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="CPPToolchains" />
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="w i" />
      <command value="Cores_BlockCacheTest w i" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.Cores_TestSchema">
    <configuration name="Cores_BandwidthTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_BandwidthTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_BandwidthTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_BasicTypeTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_BasicTypeTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_BasicTypeTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_BitsetTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_BitsetTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_BitsetTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_BlockAppendTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_BlockAppendTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_BlockAppendTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_BlockManagerTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_BlockManagerTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_BlockManagerTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_ClearMemory" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_ClearMemory" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_ClearMemory" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_DiskAnsyncIOTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_DiskAnsyncIOTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_DiskAnsyncIOTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_DiskPerformanceTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_DiskPerformanceTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_DiskPerformanceTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_LSMBloomFilterTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_LSMBloomFilterTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_LSMBloomFilterTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_MallocAndBeyondTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_MallocAndBeyondTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_MallocAndBeyondTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_ParallelBandwidthTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_ParallelBandwidthTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_ParallelBandwidthTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_RandomSeekTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_RandomSeekTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_RandomSeekTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_SIMDBasisTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_SIMDBasisTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_SIMDBasisTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_btreeTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_btreeTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_btreeTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_lz4CodecTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_lz4CodecTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_lz4CodecTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_stdcasTest" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_stdcasTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_stdcasTest" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_BlockCacheTest" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="tr" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_BlockCacheTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_BlockCacheTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_FDBTreeDbg" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_FDBTreeDbg" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_FDBTreeDbg">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_FDBTreeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_FDBTreeGen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_FDBTreeGen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_FDBTreeLoad" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_FDBTreeLoad" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_FDBTreeLoad">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_FDBTreeSearch" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_FDBTreeSearch" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_FDBTreeSearch">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_FDTreeDbg" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_FDTreeDbg" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_FDTreeDbg">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_FDTreeTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_FDTreeTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_FDTreeTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_LibblBloomFilterBasicTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_LibblBloomFilterBasicTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_LibblBloomFilterBasicTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_TestSchema" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_TestSchema" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_TestSchema">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_TestTypes" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_TestTypes" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_TestTypes">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_btreeTestBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_btreeTestBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_btreeTestBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Cores_btreeTestSearch" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="Cores_btreeTestSearch" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Cores" RUN_TARGET_NAME="Cores_btreeTestSearch">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="check" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Cores" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Cores" />
      <item itemvalue="Application.Cores_BlockCacheTest" />
      <item itemvalue="Application.Cores_FDBTreeDbg" />
      <item itemvalue="Application.Cores_FDBTreeGen" />
      <item itemvalue="Application.Cores_FDBTreeLoad" />
      <item itemvalue="Application.Cores_FDBTreeSearch" />
      <item itemvalue="Application.Cores_FDTreeDbg" />
      <item itemvalue="Application.Cores_FDTreeTest" />
      <item itemvalue="Application.Cores_LibblBloomFilterBasicTest" />
      <item itemvalue="Application.Cores_TestTypes" />
      <item itemvalue="Application.Cores_btreeTestBuild" />
      <item itemvalue="Application.Cores_btreeTestSearch" />
      <item itemvalue="Application.check" />
      <item itemvalue="Application.gtest" />
      <item itemvalue="Application.Cores_TestSchema" />
      <item itemvalue="Google Test.Cores_BandwidthTest" />
      <item itemvalue="Google Test.Cores_BasicTypeTest" />
      <item itemvalue="Google Test.Cores_BitsetTest" />
      <item itemvalue="Google Test.Cores_BlockAppendTest" />
      <item itemvalue="Google Test.Cores_BlockManagerTest" />
      <item itemvalue="Google Test.Cores_ClearMemory" />
      <item itemvalue="Google Test.Cores_DiskAnsyncIOTest" />
      <item itemvalue="Google Test.Cores_DiskPerformanceTest" />
      <item itemvalue="Google Test.Cores_LSMBloomFilterTest" />
      <item itemvalue="Google Test.Cores_MallocAndBeyondTest" />
      <item itemvalue="Google Test.Cores_ParallelBandwidthTest" />
      <item itemvalue="Google Test.Cores_RandomSeekTest" />
      <item itemvalue="Google Test.Cores_SIMDBasisTest" />
      <item itemvalue="Google Test.Cores_btreeTest" />
      <item itemvalue="Google Test.Cores_lz4CodecTest" />
      <item itemvalue="Google Test.Cores_stdcasTest" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b9b43bcd-145f-44aa-90b6-758cb26fe0ab" name="Default Changelist" comment="" />
      <created>1551366564484</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1551366564484</updated>
      <workItem from="1551366577568" duration="2198000" />
      <workItem from="1551508329391" duration="3863000" />
      <workItem from="1551625145238" duration="2343000" />
      <workItem from="1551627796030" duration="657000" />
      <workItem from="1551680102704" duration="4694000" />
      <workItem from="1551773255039" duration="3908000" />
      <workItem from="1551885265156" duration="2740000" />
      <workItem from="1551965362802" duration="4707000" />
      <workItem from="1552101042801" duration="15960000" />
      <workItem from="1552123475612" duration="4004000" />
      <workItem from="1552289858356" duration="10352000" />
      <workItem from="1552454072491" duration="13251000" />
      <workItem from="1552549401928" duration="1743000" />
      <workItem from="1552552182918" duration="1558000" />
      <workItem from="1552560080349" duration="2030000" />
      <workItem from="1552698607844" duration="16339000" />
      <workItem from="1552982076786" duration="12050000" />
      <workItem from="1553306712795" duration="7504000" />
      <workItem from="1553324024191" duration="2793000" />
      <workItem from="1553481978004" duration="3876000" />
      <workItem from="1553582547209" duration="4025000" />
      <workItem from="1553588418917" duration="1522000" />
      <workItem from="1553591180842" duration="827000" />
      <workItem from="1553654260360" duration="1123000" />
      <workItem from="1553662880940" duration="10304000" />
      <workItem from="1553872954266" duration="32910000" />
      <workItem from="1554797856842" duration="19893000" />
      <workItem from="1554963863297" duration="10033000" />
      <workItem from="1555291755608" duration="9103000" />
      <workItem from="1555308626757" duration="2527000" />
      <workItem from="1556020309945" duration="6698000" />
      <workItem from="1556101788284" duration="587000" />
      <workItem from="1556173783242" duration="597000" />
      <workItem from="1557226553720" duration="5847000" />
      <workItem from="1558418576064" duration="590000" />
      <workItem from="1558458770068" duration="9751000" />
      <workItem from="1559635064081" duration="3456000" />
      <workItem from="1560177373841" duration="506000" />
      <workItem from="1560180641325" duration="54000" />
      <workItem from="1562116771733" duration="1771000" />
      <workItem from="1562121646528" duration="1550000" />
      <workItem from="1562136636295" duration="2345000" />
      <workItem from="1562221264554" duration="977000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="243566000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-7" y="-7" width="1550" height="838" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.1769437" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.19121814" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.296034" />
      <window_info active="true" anchor="bottom" id="Debug" order="3" visible="true" weight="0.26203966" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32664755" />
      <window_info anchor="bottom" id="Database Changes" order="7" />
      <window_info anchor="bottom" id="Messages" order="8" weight="0.31444758" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.3286119" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" weight="0.3286119" />
      <window_info anchor="bottom" id="CMake" order="12" weight="0.2266289" />
      <window_info anchor="bottom" id="File Transfer" order="13" weight="0.19121814" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
    <layout-to-restore>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.27345845" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.19121814" />
      <window_info anchor="bottom" id="Run" order="2" visible="true" weight="0.24787535" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39943343" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.3286119" />
      <window_info anchor="bottom" id="Database Changes" order="7" />
      <window_info anchor="bottom" id="Messages" order="8" weight="0.33002833" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.3286119" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" weight="0.3286119" />
      <window_info anchor="bottom" id="CMake" order="12" weight="0.0878187" />
      <window_info anchor="bottom" id="File Transfer" order="13" weight="0.33144477" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout-to-restore>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp</url>
          <line>16</line>
          <option name="timeStamp" value="59" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/utils/utils.h</url>
          <line>2</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp</url>
          <line>13</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>885</line>
          <option name="timeStamp" value="71" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>808</line>
          <option name="timeStamp" value="72" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>823</line>
          <option name="timeStamp" value="73" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>848</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>855</line>
          <option name="timeStamp" value="75" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>872</line>
          <option name="timeStamp" value="76" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>893</line>
          <option name="timeStamp" value="77" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>915</line>
          <option name="timeStamp" value="78" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp</url>
          <line>1004</line>
          <option name="timeStamp" value="79" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/cmake/modules/Findbzip2.cmake">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="10" selection-start-line="10" selection-end-line="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/bin/cmake/win/share/cmake-3.13/Modules/FindBoost.cmake">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="321">
          <caret line="2112" column="9" selection-start-line="2112" selection-start-column="9" selection-end-line="2112" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://D:/2018fall/embedded/探索者F4 资料盘(A盘)/4，程序源码/1，标准例程-寄存器版本/实验40 汉字显示实验/USER/test.c">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://D:/NCores/src/block/buffer/BlockCache.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="193">
          <caret line="136" lean-forward="true" selection-start-line="136" selection-end-line="136" />
        </state>
      </provider>
    </entry>
    <entry file="file://D:/NCores/test/block/buffer/BlockCacheTest.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="206">
          <caret line="15" lean-forward="true" selection-start-line="15" selection-end-line="95" />
          <folding>
            <element signature="e#216#241#1" />
            <element signature="e#579#907#2" />
            <element signature="e#920#944#1" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://D:/MinGW/include/c++/8.2.0/bits/unique_ptr.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="148">
          <caret line="337" selection-start-line="337" selection-end-line="337" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/block/buffer/CoresIterator.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="15" column="2" lean-forward="true" selection-start-line="15" selection-start-column="2" selection-end-line="15" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/columnar/ColumnarFile.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="38" column="10" selection-start-line="38" selection-start-column="10" selection-end-line="38" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/columnar/ColumnarHeader.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="152">
          <caret line="9" lean-forward="true" selection-start-line="9" selection-end-line="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/utils/utils.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="437">
          <caret line="23" lean-forward="true" selection-start-line="23" selection-end-line="23" />
          <folding>
            <element signature="e#14#33#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/block/buffer/BlockCache.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="76">
          <caret line="4" column="23" selection-end-line="4" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://D:/MinGW/x86_64-w64-mingw32/include/stdio.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="11476">
          <caret line="604" column="17" selection-start-line="604" selection-start-column="17" selection-end-line="604" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://D:/MinGW/x86_64-w64-mingw32/include/wchar.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="256">
          <caret line="54" column="54" lean-forward="true" selection-start-line="54" selection-start-column="54" selection-end-line="54" selection-end-column="54" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/utils/Bitset.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="437">
          <caret line="23" column="5" selection-start-line="23" selection-start-column="5" selection-end-line="23" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/osdep/FileOperations.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="114">
          <caret line="6" column="24" selection-start-line="6" selection-start-column="24" selection-end-line="6" selection-end-column="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/block/buffer/BlockCache.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="349">
          <caret line="171" column="23" selection-start-line="171" selection-start-column="23" selection-end-line="171" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/block/buffer/BlockCacheTest.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="220" column="31" selection-start-line="220" selection-start-column="31" selection-end-line="220" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="183">
          <caret line="431" column="42" selection-start-line="431" selection-start-column="42" selection-end-line="431" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/metadata/parser/TestSchema.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="411">
          <caret line="1005" selection-start-line="1005" selection-end-line="1005" />
          <folding>
            <element signature="e#0#17#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>